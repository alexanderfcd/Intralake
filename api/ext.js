const needConvertAsDocument = (ext) => {
  ext = ext.trim().toLowerCase();
  const docs = [
    "xls",
    "xls5",
    "xls95",
    "xlt",
    "xlt5",
    "xlt95",
    "docx",
    "doc",
    "xls",
    "xlsx",
    "doc6",
    "ott",
    "sdw",
    "sdw4",
    "sdw3",
    "stw",
    "sxw",
    "vor",
    "vor4",
    "vor3",
    "eps",
    "odd",
    "otg",
    "pbm",
    "odt",
    "doc95",
    "rtf",
    "ppt",
    "pptx",
    "pts",
  ];
  return docs.indexOf(ext) !== -1;
};

const needConvertAsVideo = (ext) => {
  ext = ext.trim().toLowerCase();
  const ffmpegExtension = [
    "3dostr",
    "3g2",
    "3gp",
    "4xm",
    "a64",
    "aa",
    "aac",
    "aax",
    "ac3",
    "ace",
    "acm",
    "act",
    "adf",
    "adp",
    "ads",
    "adts",
    "adx",
    "aea",
    "afc",
    "aiff",
    "aix",
    "alaw",
    "alias_pix",
    "alp",
    "amr",
    "amrnb",
    "amrwb",
    "amv",
    "anm",
    "apc",
    "ape",
    "apm",
    "apng",
    "aptx",
    "DE aptx_hd",
    "D  aqtitle",
    "argo_asf",
    "argo_brp",
    "argo_cvg",
    "asf",
    "asf_o",
    "asf_stream",
    "ass",
    "ast",
    "au",
    "av1",
    "avi",
    "avisynth",
    "avm2",
    "avr",
    "avs",
    "avs2",
    "avs3",
    "bethsoftvid",
    "bfi",
    "bfstm",
    "bin",
    "bink",
    "binka",
    "bit",
    "bitpacked",
    "bmp_pipe",
    "bmv",
    "boa",
    "brender_pix",
    "brstm",
    "c93",
    "caca",
    "caf",
    "cavsvideo",
    "cdg",
    "cdxl",
    "chromaprint",
    "cine",
    "codec2",
    "codec2raw",
    "concat",
    "crc",
    "cri_pipe",
    "dash",
    "data",
    "daud",
    "dcstr",
    "dds_pipe",
    "derf",
    "dfa",
    "dhav",
    "dirac",
    "dnxhd",
    "dpx_pipe",
    "dsf",
    "dshow",
    "dsicin",
    "dss",
    "dts",
    "dtshd",
    "dv",
    "dvbsub",
    "dvbtxt",
    "dvd",
    "dxa",
    "ea",
    "ea_cdata",
    "eac3",
    "epaf",
    "exr_pipe",
    "f32be",
    "f32le",
    "f4v",
    "f64be",
    "f64le",
    "ffmetadata",
    "fifo",
    "fifo_test",
    "film_cpk",
    "filmstrip",
    "fits",
    "flac",
    "flic",
    "flv",
    "framecrc",
    "framehash",
    "framemd5",
    "frm",
    "fsb",
    "fwse",
    "g722",
    "g723_1",
    "g726",
    "g726le",
    "g729",
    "gdigrab",
    "gdv",
    "gem_pipe",
    "genh",
    "gif",
    "gif_pipe",
    "gsm",
    "gxf",
    "h261",
    "h263",
    "h264",
    "hash",
    "hca",
    "hcom",
    "hds",
    "hevc",
    "hls",
    "hnm",
    "ico",
    "idcin",
    "idf",
    "iff",
    "ifv",
    "ilbc",
    "image2",
    "image2pipe",
    "imf",
    "ingenient",
    "ipmovie",
    "ipod",
    "ipu",
    "ircam",
    "ismv",
    "iss",
    "iv8",
    "ivf",
    "ivr",
    "j2k_pipe",
    "jacosub",
    "jpeg_pipe",
    "jpegls_pipe",
    "jv",
    "kux",
    "kvag",
    "latm",
    "lavfi",
    "libcdio",
    "libgme",
    "libmodplug",
    "libopenmpt",
    "live_flv",
    "lmlm4",
    "loas",
    "lrc",
    "luodat",
    "lvf",
    "lxf",
    "m4v",
    "matroska",
    "matroska,webm",
    "mca",
    "mcc",
    "md5",
    "mgsts",
    "microdvd",
    "mjpeg",
    "mjpeg_2000",
    "mkv",
    "mlp",
    "mlv",
    "mm",
    "mmf",
    "mods",
    "moflex",
    "mov",
    "mov",
    "m4a",
    "3gp",
    "3g2",
    "mj2",
    "mp2",
    "mpc",
    "mpc8",
    "mpeg",
    "mpeg1video",
    "mpeg2video",
    "mpegts",
    "mpegtsraw",
    "mpegvideo",
    "mpjpeg",
    "mpl2",
    "mpsub",
    "msf",
    "msnwctcp",
    "msp",
    "mtaf",
    "mtv",
    "mulaw",
    "musx",
    "mv",
    "mvi",
    "mxf",
    "mxf_d10",
    "mxf_opatom",
    "mxg",
    "nc",
    "nistsphere",
    "nsp",
    "nsv",
    "null",
    "nut",
    "nuv",
    "obu",
    "oga",
    "ogg",
    "ogv",
    "oma",
    "opus",
    "paf",
    "pam_pipe",
    "pbm_pipe",
    "pcx_pipe",
    "pgm_pipe",
    "pgmyuv_pipe",
    "pgx_pipe",
    "photocd_pipe",
    "pictor_pipe",
    "pjs",
    "pmp",
    "png_pipe",
    "pp_bnk",
    "ppm_pipe",
    "psd_pipe",
    "psp",
    "psxstr",
    "pva",
    "pvf",
    "qcp",
    "qdraw_pipe",
    "r3d",
    "rawvideo",
    "realtext",
    "redspark",
    "rl2",
    "rm",
    "roq",
    "rpl",
    "rsd",
    "rso",
    "rtp",
    "rtp_mpegts",
    "rtsp",
    "s16be",
    "s16le",
    "s24be",
    "s24le",
    "s32be",
    "s32le",
    "s337m",
    "s8",
    "sami",
    "sap",
    "sbc",
    "sbg",
    "scc",
    "scd",
    "sdl,sdl2",
    "sdp",
    "sdr2",
    "sds",
    "sdx",
    "segment",
    "ser",
    "sga",
    "sgi_pipe",
    "shn",
    "siff",
    "simbiosis_imx",
    "sln",
    "smjpeg",
    "smk",
    "smoothstreaming",
    "smush",
    "sol",
    "sox",
    "spdif",
    "spx",
    "srt",
    "stl",
    "stream_segment,",
    "streamhash",
    "subviewer",
    "subviewer1",
    "sunrast_pipe",
    "sup",
    "svag",
    "svcd",
    "svg_pipe",
    "svs",
    "swf",
    "tak",
    "tedcaptions",
    "tee",
    "thp",
    "tiertexseq",
    "tiff_pipe",
    "tmv",
    "truehd",
    "tta",
    "ttml",
    "tty",
    "txd",
    "ty",
    "u16be",
    "u16le",
    "u24be",
    "u24le",
    "u32be",
    "u32le",
    "u8",
    "uncodedframecrc",
    "v210",
    "v210x",
    "vag",
    "vc1",
    "vc1test",
    "vcd",
    "vfwcap",
    "vidc",
    "vividas",
    "vivo",
    "vmd",
    "vob",
    "vobsub",
    "voc",
    "vpk",
    "vplayer",
    "vqf",
    "w64",
    "wav",
    "wc3movie",
    "webm",
    "webm_chunk",
    "webp",
    "webp_pipe",
    "webvtt",
    "wsaud",
    "wsd",
    "wsvqa",
    "wtv",
    "wv",
    "wve",
    "xa",
    "xbin",
    "xbm_pipe",
    "xmv",
    "xpm_pipe",
    "xvag",
    "xwd_pipe",
    "xwma",
    "yop",
    "yuv4mpegpipe",
  ];
  return ffmpegExtension.indexOf(ext) !== -1;
};

const needConvertAsPSD = (ext) => ext.trim().toLowerCase() === "psd";

module.exports = {
  needConvertAsDocument,
  needConvertAsVideo,
  needConvert: (ext) => {
    return (
      needConvertAsPSD(ext) ||
      needConvertAsDocument(ext) ||
      needConvertAsVideo(ext)
    );
  },
};
